-- Creating enum types
CREATE TYPE user_role AS ENUM ('ADMIN', 'USER');
CREATE TYPE report_reason AS ENUM ('SPAM', 'INAPPROPRIATE', 'INCORRECT', 'OTHER');
CREATE TYPE report_status AS ENUM ('PENDING', 'RESOLVED', 'REJECTED');

-- Creating tables
CREATE TABLE users (
    id UUID PRIMARY KEY,
    email VARCHAR UNIQUE,
    password VARCHAR,
    role user_role DEFAULT 'USER'
);

CREATE TABLE recipes (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR NOT NULL,
    description VARCHAR,
    instructions VARCHAR NOT NULL,
    category VARCHAR NOT NULL,
    author UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    preparation_time INTEGER NOT NULL CHECK (preparation_time > 0),
    servings INTEGER CHECK (servings > 0),
    difficulty VARCHAR,
    average_rating FLOAT CHECK (average_rating >= 0 AND average_rating <= 5),
    ai_detected FLOAT,
    ingredients VARCHAR[] NOT NULL,
    steps VARCHAR[],
    tags VARCHAR[]
);

CREATE TABLE ratings (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    author UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    recipe_id INTEGER NOT NULL REFERENCES recipes(id) ON DELETE CASCADE,
    value INTEGER NOT NULL CHECK (value >= 1 AND value <= 5),
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE comments (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    author UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    recipe_id INTEGER NOT NULL REFERENCES recipes(id) ON DELETE CASCADE,
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    content VARCHAR NOT NULL,
    rating_id INTEGER REFERENCES ratings(id) ON DELETE CASCADE
);

CREATE TABLE reports (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    reporter_id UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    recipe_id INTEGER REFERENCES recipes(id) ON DELETE CASCADE,
    comment_id INTEGER REFERENCES comments(id) ON DELETE CASCADE,
    reason report_reason NOT NULL,
    description VARCHAR,
    status report_status NOT NULL DEFAULT 'PENDING',
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    resolved_at TIMESTAMP WITH TIME ZONE,
    resolved_by UUID REFERENCES users(id) ON DELETE SET NULL,
    resolution_note VARCHAR
);

-- Creating indexes
CREATE INDEX idx_recipes_author ON recipes(author);
CREATE INDEX idx_recipes_category ON recipes(category);
CREATE INDEX idx_ratings_recipe_id ON ratings(recipe_id);
CREATE INDEX idx_comments_recipe_id ON comments(recipe_id);
CREATE INDEX idx_comments_rating_id ON comments(rating_id);
CREATE INDEX idx_reports_recipe_id ON reports(recipe_id);

-- Resetting the sequence
SELECT setval(pg_get_serial_sequence('recipes', 'id'), COALESCE((SELECT MAX(id) FROM recipes), 0) + 1, false);
SELECT setval(pg_get_serial_sequence('ratings', 'id'), COALESCE((SELECT MAX(id) FROM ratings), 0) + 1, false);
SELECT setval(pg_get_serial_sequence('comments', 'id'), COALESCE((SELECT MAX(id) FROM comments), 0) + 1, false);
SELECT setval(pg_get_serial_sequence('reports', 'id'), COALESCE((SELECT MAX(id) FROM reports), 0) + 1, false);
