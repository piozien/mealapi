import aiohttp
from typing import Dict, Any
from mealapi.infrastructure.utils.consts import (
    API_KEY_SAPLING,
    API_URL_SAPLING
)


class AIDetector:
    """Utility class for AI text detection using Sapling API."""

    @classmethod
    async def detect_ai_text(cls, text: str) -> float:
        """Detect if text was generated by AI using Sapling API.

        Args:
            text (str): Text to analyze

        Returns:
            float: AI detection score between 0 and 1
        """
        payload = cls._prepare_payload(text)

        try:
            async with aiohttp.ClientSession() as session:
                async with session.post(API_URL_SAPLING, json=payload) as response:
                    response_data = await response.json()
                    score = response_data.get('score', 0.0)
                    return round(score, 2)
        except Exception as e:
            print(f"Error detecting AI text: {str(e)}")
            return 0.0

    @classmethod
    def _prepare_payload(cls, text: str) -> Dict[str, Any]:
        """Prepare payload for API request.

        Args:
            text (str): Text to analyze

        Returns:
            Dict[str, Any]: Prepared payload
        """
        return {
            "key": API_KEY_SAPLING,
            "text": text
        }
